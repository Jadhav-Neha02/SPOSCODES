#Page Replacement Algorithms
def optimal(processes,frame_size):
    
    tracker = [["-" for _ in range(frame_size)] for i in range(len(processes))]
    page_fault = 0
    #Here what to replace we have to find out, doesn't follow a pattern
    #So no need to define it
    for i in range(len(processes)):
        process = processes[i]
        #Copying previous alignment to make changes
        if i>=1:
            tracker[i] = list(tracker[i-1])
        if process not in tracker[i]:
            page_fault += 1
            #initially we just fillup the empty spaces
            if "-" in tracker[i]:
                ind = tracker[i].index("-")
                tracker[i][ind] = process
            #if not
            else:
                element_to_replace = None
                ind_to_replace = None
                #p is the processes in the page
                for p in tracker[i]:
                    if p in processes[i+1:]:
                        temp_ind = processes[i+1:].index(p)
                        if ind_to_replace is None or temp_ind > ind_to_replace:
                            ind_to_replace = temp_ind
                    else:
                        element_to_replace = p

                if element_to_replace == None:
                    if ind_to_replace is None:
                        element_to_replace = tracker[i][0]   
                    else:
                    #element to replace
                        element_to_replace = processes[i+1:][ind_to_replace]
                    #remaining code is the same as LRU
                    #Now we have what element to replace
                    #We need to find the position in frame to replace
                    ind = tracker[i].index(element_to_replace)
                    #Replace
                    tracker[i][ind] = process
                else:
                    ind = tracker[i].index(element_to_replace)
                    #Replace
                    tracker[i][ind] = process
    print("Optimal Page Replacement")
    print("Page Faults : ", page_fault)
    for i in tracker:
        print(i)
